name: Actions

on: 
    push:
        branches:
            - main
    workflow_dispatch:
        inputs:
            task_name:
                description: 'Tag name of the image to be pushed.'
                type: choice
                required: true
                default: 'build'
                options:
                    - 'build'
                    - 'test'
            node_version:
                description: 'Node.js version to build this image with.'
                type: choice
                required: true
                default: '20'
                options:
                    - '20'
            image_name_custom:
                description: 'Tag name of the custom image to be pushed.'
                type: string
                required: false
                default: 'luoweb/litemall-custom'
            tag_version:
                description: 'Tag version of the image to be pushed.'
                type: string
                required: false
                default: 'latest'
jobs:
  build:
    if: github.event.inputs.task_name == 'build'
    runs-on: ubuntu-latest
    timeout-minutes: 120
    # runs-on: self-hosted
    # strategy:
    #   matrix:
    #     python-version: [ "3.9" ]
    steps:
      # - uses: AutoModality/action-clean@v1
      - name: Clean docker image cache
        shell: bash
        # if: ${{ github.event.inputs.node_version == 'luoweb/inference' }}
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Log in to Aliyun Docker Hub
        uses: docker/login-action@v1
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.DOCKERHUB_ALIYUN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ALIYUN_PASSWORD }}

      - name: Push docker image to Aliyun
        shell: bash
        # if: ${{ github.repository == 'luoweb/litemall' }}
        if: ${{ github.event.inputs.node_version == 'luoweb/inference' }}
        env:
          DOCKER_ORG: registry.cn-hangzhou.aliyuncs.com/roweb
        run: |

          cat ./litemall-db/sql/litemall_schema.sql > ./docker/db/init-sql/litemall.sql
          cat ./litemall-db/sql/litemall_table.sql >> ./docker/db/init-sql/litemall.sql
          cat ./litemall-db/sql/litemall_data.sql >> ./docker/db/init-sql/litemall.sql
          
          cd ./litemall-admin
          npm install --registry=https://registry.npm.taobao.org
          npm run build:dep
          cd ..
          mvn clean package
          cp -f ./litemall-all/target/litemall-all-*-exec.jar ./docker/litemall/litemall.jar

          cd ./docker
          docker-compose build
          docker images

          docker tag "litemall" "${DOCKER_ORG}/litemall:${IMAGE_TAG}"
          docker push "${DOCKER_ORG}/litemall:${IMAGE_TAG}"

          docker tag "litemall" "${DOCKER_ORG}/litemall:${IMAGE_TAG}"
          docker push "${DOCKER_ORG}/litemall:${IMAGE_TAG}"

      - name: Clean docker image cache
        shell: bash
        if: ${{ github.repository == 'luoweb/litemall' }}
        run: |
          docker system prune -f -a

  # Building and testing Java with Maven
  # https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven
  Litemall-all:
    if: github.event.inputs.task_name == 'test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version:
        - 8
        - 8.0.192
        - 11
        - 11.0.3
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: zulu
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify

  # Building and testing Node.js
  # https://docs.github.com/en/actions/guides/building-and-testing-nodejs
  Litemall-admin:
    if: github.event.inputs.task_name == 'test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 10.x
        - 12.x
        - 14.x
        # - 15.x
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm --prefix litemall-admin install
    - run: npm --prefix litemall-admin run test

  Litemall-vue:
    if: github.event.inputs.task_name == 'test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
        - 10.x
        - 12.x
        - 14.x
        # - 15.x
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm --prefix litemall-vue install
    - run: npm --prefix litemall-vue run test
